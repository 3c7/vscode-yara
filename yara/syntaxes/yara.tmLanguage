<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>yara</string>
		<string>yar</string>
	</array>
	<key>name</key>
	<string>YARA</string>
	<key>scopeName</key>
	<string>source.yara</string>
	<key>patterns</key>
	<array>
		<dict>
			<!-- block and line comments -->
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<!-- true/false -->
			<key>include</key>
			<string>#constant</string>
		</dict>
		<dict>
			<!-- general sections of the document -->
			<key>include</key>
			<string>#entity</key>
		</dict>
		<dict>
			<!-- miscellaneous -->
			<key>include</key>
			<string>#keyword</string>
		</dict>
		<dict>
			<!-- words that start with '$' -->
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<!-- YARA meta keywords -->
			<key>include</key>
			<string>#meta</string>
		</dict>
		<dict>
			<!-- strings, hex, regex -->
			<key>include</key>
			<string>#string</string>
		</dict>
		<dict>
			<!-- invalid/deprecated -->
			<key>include</key>
			<string>#invalid</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>comment.line.source.yara</string>
					<!-- match everything on a line after '//' -->
					<key>begin</key>
					<string>//</string>
					<key>end</key>
					<string>\n</string>
				</dict>
				<dict>
					<key>name</key>
					<string>comment.block.source.yara</string>
					<!-- match everything between (and including) /* */ -->
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
				</dict>
			</array>
		</dict>
		<key>constant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>constant.language.boolean.source.yara</string>
					<key>match</key>
					<string>(true|false)</string>
				</dict>
			</array>
		</dict>
		<key>entity</key>
		<dict>
		</dict>
		<key>keyword</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>keyword.operator.logical.source.yara</string>
					<key>match</key>
					<string>( and | or | not )</string>
				</dict>
				<dict>
					<key>name</key>
					<string>keyword.other.source.yara</string>
					<key>match</key>
					<string>(^(\s)*global |^(\s)*rule |^(\s)*condition:$|^(\s)*strings:$|^(\s)*meta:$)</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
		</dict>
		<key>meta</key>
		<dict>
		</dict>
		<key>string</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>name</key>
					<string>string.single.source.yara</string>
					<key>match</key>
					<string>\'.*\'</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.double.source.yara</string>
					<key>match</key>
					<string>\".*\"</string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.regexp.source.yara</string>
					<key>match</key>
					<string></string>
				</dict>
				<dict>
					<key>name</key>
					<string>string.hex.source.yara</string>
					<key>match</key>
					<string>\s[0-9A-Fa-f]{2}\s</string>
				</dict>
			</array>
		</dict>
		<key>invalid</key>
		<dict>
		</dict>
	</dict>
	<!-- define pairs of characters so that the second character gets
	automatically inserted when you type the first character -->
	<key>smartTypingPairs</key>
	<array>
		<array>
			<string>'</string>
			<string>'</string>
		</array>
		<array>
			<string>"</string>
			<string>"</string>
		</array>
		<array>
			<string>(</string>
			<string>)</string>
		</array>
		<array>
			<string>{</string>
			<string>}</string>
		</array>
		<array>
			<string>[</string>
			<string>]</string>
		</array>
		<array>
			<string>/*</string>
			<string>*/</string>
		</array>
	</array>
	<key>highlightPairs</key>
	<array>
		<array>
			<string>'</string>
			<string>'</string>
		</array>
		<array>
			<string>"</string>
			<string>"</string>
		</array>
		<array>
			<string>(</string>
			<string>)</string>
		</array>
		<array>
			<string>{</string>
			<string>}</string>
		</array>
		<array>
			<string>[</string>
			<string>]</string>
		</array>
		<array>
			<string>/*</string>
			<string>*/</string>
		</array>
	</array>
</dict>
</plist>