{
    "Rule": {
        "prefix": "rule",
        "body": [
            "rule ${TM_FILENAME_BASE/[^0-9^a-z^_]//gi}",
            "{",
            "\tmeta:",
            "\t\tdate = \"${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}\"",
            "\tstrings:",
            "\t\t${1:strings}",
            "\tcondition:",
            "\t\t${2:condition}",
            "}"
        ],
        "description": "Generate a rule skeleton. Rule name is generated from current filename including only alphanumeric characters and underscores)"
    },
    "Meta": {
        "prefix": "meta",
        "body": [
            "meta:",
            "\t\tdate = \"${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}\"",
            "\t${metadata}"
        ],
        "description": "Generate a 'meta' section"
    },
    "Strings": {
        "prefix": "strings",
        "body": [
            "strings:",
            "\t${strings}"
        ],
        "description": "Generate a 'strings' section"
    },
    "Condition": {
        "prefix": "condition",
        "body": [
            "condition:",
            "\t${conditions}"
        ],
        "description": "Generate a 'condition' section"
    },
    "Import": {
        "prefix": "import",
        "body": "import \"${1|pe,elf,cuckoo,magic,hash,math,dotnet,time|}\"",
        "description": "Import a YARA module"
    },
    "for..of": {
        "prefix": "for",
        "body": "for ${1:expression} of them : ( ${2:boolean_expression} )",
        "description": "Apply the same condition to many strings"
    },
    "for..in": {
        "prefix": "for",
        "body": "for ${1:expression} in ( ${2:string_set} ) : ( ${3:boolean_expression} )",
        "description": "Apply the same condition to many strings"
    },
    "any": {
        "prefix": "any",
        "body": "any of ${them}",
        "description": "String set keyword: any"
    },
    "all": {
        "prefix": "all",
        "body": "all of ${them}",
        "description": "String set keyword: all"
    },
    "Ad Hoc Rule - String": {
        "prefix": "#s#",
        "body": "rule ${2:adhoc_string} {strings: \\$a = \"${1:string}\" ascii wide nocase condition: \\$a}",
        "description": "Generate a strings-based Ad Hoc YARA rule per Didier Stevens' guide at https://blog.didierstevens.com/2019/12/31/yara-ad-hoc-rules/"
    },
    "Ad Hoc Rule - Hex": {
        "prefix": "#x#",
        "body": "rule ${2:adhoc_hexadecimal} {strings: \\$a = { ${1:hexadecimal} } condition: \\$a}",
        "description": "Generate a hexadecimal Ad Hoc YARA rule per Didier Stevens' guide at https://blog.didierstevens.com/2019/12/31/yara-ad-hoc-rules/"
    },
    "Ad Hoc Rule - Regex": {
        "prefix": "#r#",
        "body": "rule ${2:adhoc_regex} {strings: \\$a = / ${1:regex} / ascii wide nocase condition: \\$a}",
        "description": "Generate a regex Ad Hoc YARA rule per Didier Stevens' guide at https://blog.didierstevens.com/2019/12/31/yara-ad-hoc-rules/"
    },
    "Ad Hoc Rule - Base64": {
        "prefix": "#b#",
        "body": "rule ${2:adhoc_base64} {strings: \\$a = \"${1:string}\" base64 condition: \\$a}",
        "description": "Generate a base64 Ad Hoc YARA rule per Didier Stevens' guide at https://blog.didierstevens.com/2019/12/31/yara-ad-hoc-rules/"
    }
}